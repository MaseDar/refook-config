server:
  port: 8084
  error:
    include-message: on-param
    whitelabel:
      enabled: false
spring:
  application:
    name: jooq-api-and-kafka
  datasource:
  jooq:
    sql-dialect: postgres

  main:
    allow-bean-definition-overriding: true
  kafka:
    # Адреса всех брокеров кластера
    bootstrap-servers: host.docker.internal:29092
    listener:
      # Получение каждой записи должно быть подтверждено
      ack-mode: record
    producer:
      client-id: ${spring.application.name}
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      # Очередь для исключений
      value-serializer: ru.refook.metrics.config.DltMessageSerializer
      retries: 3
    consumer:
      group-id: ${spring.application.name}
      autoOffsetReset: earliest
      # Сериализаторы для всех типов
      keyDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
      valueDeserializer: org.springframework.kafka.support.serializer.ErrorHandlingDeserializer
    properties:
      # Тип, для которого определяем конкретные сериализаторы
      spring.json.value.default.type: ru.refook.common.dto.MetricDTO
      spring.deserializer.key.delegate.class: org.apache.kafka.common.serialization.StringDeserializer
      spring.deserializer.value.delegate.class: org.springframework.kafka.support.serializer.JsonDeserializer

kafka:
  topics:
    view-topic: view
    like-topic: like